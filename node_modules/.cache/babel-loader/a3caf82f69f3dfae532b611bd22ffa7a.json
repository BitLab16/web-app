{"remainingRequest":"/Users/antonio/Desktop/dashboard/node_modules/babel-loader/lib/index.js!/Users/antonio/Desktop/dashboard/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/antonio/Desktop/dashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/antonio/Desktop/dashboard/src/components/HeatMap.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/antonio/Desktop/dashboard/src/components/HeatMap.vue","mtime":1614187549656},{"path":"/Users/antonio/Desktop/dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/antonio/Desktop/dashboard/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/antonio/Desktop/dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/antonio/Desktop/dashboard/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKdmFyIGJvdW5kcyA9IHsKICBub3J0aDogNDUuNDQ0MzE1LAogIHNvdXRoOiA0NS4zNjIwNTEsCiAgd2VzdDogMTEuODI1NjI3LAogIGVhc3Q6IDExLjk0ODU0MAp9OwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0hlYXRNYXAnLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBsYXRpOiBbXSwKICAgICAgbG5nbzogW10KICAgIH07CiAgfSwKICBwcm9wczogewogICAgbGF0OiB7CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgZGVmYXVsdDogZnVuY3Rpb24gX2RlZmF1bHQoKSB7CiAgICAgICAgcmV0dXJuIDM3Ljc3NTsKICAgICAgfQogICAgfSwKICAgIGxuZzogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIGRlZmF1bHQ6IGZ1bmN0aW9uIF9kZWZhdWx0KCkgewogICAgICAgIHJldHVybiAtMTIyLjQzNDsKICAgICAgfQogICAgfSwKICAgIGluaXRpYWxab29tOiB7CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgZGVmYXVsdDogZnVuY3Rpb24gX2RlZmF1bHQoKSB7CiAgICAgICAgcmV0dXJuIDE0OwogICAgICB9CiAgICB9LAogICAgbWFwVHlwZTogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6IGZ1bmN0aW9uIF9kZWZhdWx0KCkgewogICAgICAgIHJldHVybiAncm9hZG1hcCc7CiAgICAgIH0KICAgIH0sCiAgICBwb2ludHM6IHsKICAgICAgdHlwZTogQXJyYXksCiAgICAgIHJlcXVpcmVkOiB0cnVlCiAgICB9LAogICAgd2lkdGg6IHsKICAgICAgdHlwZTogW1N0cmluZywgTnVtYmVyXSwKICAgICAgZGVmYXVsdDogZnVuY3Rpb24gX2RlZmF1bHQoKSB7CiAgICAgICAgcmV0dXJuICcxMDAlJzsKICAgICAgfQogICAgfSwKICAgIGhlaWdodDogewogICAgICB0eXBlOiBbU3RyaW5nLCBOdW1iZXJdLAogICAgICBkZWZhdWx0OiBmdW5jdGlvbiBfZGVmYXVsdCgpIHsKICAgICAgICByZXR1cm4gJzEwMCUnOwogICAgICB9CiAgICB9LAogICAgb3BhY2l0eTogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIGRlZmF1bHQ6IGZ1bmN0aW9uIF9kZWZhdWx0KCkgewogICAgICAgIHJldHVybiAxOwogICAgICB9CiAgICB9LAogICAgcmFkaXVzOiB7CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgZGVmYXVsdDogZnVuY3Rpb24gX2RlZmF1bHQoKSB7CiAgICAgICAgcmV0dXJuIDE1OwogICAgICB9CiAgICB9LAogICAgbWFya2VyczogW3sKICAgICAgcG9zaXRpb246IHsKICAgICAgICBsYXQ6IDQ1LjQ0NDMxNSwKICAgICAgICBsbmc6IDExLjgyNTYyNwogICAgICB9CiAgICB9LCB7CiAgICAgIHBvc2l0aW9uOiB7CiAgICAgICAgbGF0OiA0NS4zNjIwNTEsCiAgICAgICAgbG5nOiAxMS45NDg1NDAKICAgICAgfQogICAgfV0sCiAgICBtYXhJbnRlbnNpdHk6IHsKICAgICAgdHlwZTogTnVtYmVyLAogICAgICBkZWZhdWx0OiBmdW5jdGlvbiBfZGVmYXVsdCgpIHsKICAgICAgICByZXR1cm4gNTsKICAgICAgfQogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIG1hcFdpZHRoOiBmdW5jdGlvbiBtYXBXaWR0aCgpIHsKICAgICAgaWYgKHR5cGVvZiB0aGlzLndpZHRoID09PSAnc3RyaW5nJykgewogICAgICAgIHJldHVybiB0aGlzLndpZHRoOwogICAgICB9IGVsc2UgewogICAgICAgIHJldHVybiAiIi5jb25jYXQodGhpcy53aWR0aCwgInB4Iik7CiAgICAgIH0KICAgIH0sCiAgICBtYXBIZWlnaHQ6IGZ1bmN0aW9uIG1hcEhlaWdodCgpIHsKICAgICAgaWYgKHR5cGVvZiB0aGlzLmhlaWdodCA9PT0gJ3N0cmluZycpIHsKICAgICAgICByZXR1cm4gdGhpcy5oZWlnaHQ7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuICIiLmNvbmNhdCh0aGlzLmhlaWdodCwgInB4Iik7CiAgICAgIH0KICAgIH0sCiAgICBoZWF0bWFwUG9pbnRzOiBmdW5jdGlvbiBoZWF0bWFwUG9pbnRzKCkgewogICAgICByZXR1cm4gdGhpcy5kYXRhLm1hcChmdW5jdGlvbiAoZGF0YSkgewogICAgICAgIHJldHVybiBuZXcgZ29vZ2xlLm1hcHMuTGF0TG5nKGRhdGEubGF0aSwgZGF0YS5sbmdvKTsKICAgICAgfSk7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICBheGlvcy5nZXQoJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9sb2NhdGlvbicpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgIHJldHVybiBfdGhpcy5wb2ludHMgPSByZXNwb25zZS5kYXRhOwogICAgfSk7CiAgICByZXR1cm4gdGhpcy4kZ21hcEFwaVByb21pc2VMYXp5KCkudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZQogICAgICBfdGhpcy4kbWFwT2JqZWN0ID0gbmV3IGdvb2dsZS5tYXBzLk1hcChfdGhpcy4kcmVmcy5oZWF0bWFwLCB7CiAgICAgICAgem9vbTogX3RoaXMuaW5pdGlhbFpvb20sCiAgICAgICAgY2VudGVyOiB7CiAgICAgICAgICBsYXQ6IF90aGlzLmxhdCwKICAgICAgICAgIGxuZzogX3RoaXMubG5nCiAgICAgICAgfSwKICAgICAgICByZXN0cmljdGlvbjogewogICAgICAgICAgbGF0TG5nQm91bmRzOiBib3VuZHMKICAgICAgICB9LAogICAgICAgIG1hcFR5cGVJZDogX3RoaXMubWFwVHlwZQogICAgICB9KTsgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lCgogICAgICBfdGhpcy4kaGVhdG1hcCA9IG5ldyBnb29nbGUubWFwcy52aXN1YWxpemF0aW9uLkhlYXRtYXBMYXllcih7CiAgICAgICAgZGF0YTogX3RoaXMuaGVhdG1hcFBvaW50cywKICAgICAgICBtYXA6IF90aGlzLiRtYXBPYmplY3QsCiAgICAgICAgb3BhY2l0eTogX3RoaXMub3BhY2l0eSwKICAgICAgICByYWRpdXM6IF90aGlzLnJhZGl1cywKICAgICAgICBtYXhJbnRlbnNpdHk6IF90aGlzLm1heEludGVuc2l0eQogICAgICB9KTsKCiAgICAgIF90aGlzLiRoZWF0bWFwLnNldE1hcChfdGhpcy4kbWFwT2JqZWN0KTsKICAgIH0pOwogIH0KICAvKm1ldGhvZHM6IHsKICAgIC8vIFB1c2hlcyBwb3N0cyB0byB0aGUgc2VydmVyIHdoZW4gY2FsbGVkLgogICAgcG9zdFBvc3QoKSB7CiAgICAgIGF4aW9zLnBvc3QoYGh0dHBzOi8vd3d3Lmdvb2dsZS5jb20vbWFwcy9zZWFyY2gvP2FwaT0xJnF1ZXJ5PTQ1LjM5Nzk1OSwxMS44NzcyMWAsIHsKICAgICAgICBib2R5OiB0aGlzLnBvc3RCb2R5CiAgICAgIH0pCiAgICAgIC50aGVuKHJlc3BvbnNlID0+IHt9KQogICAgICAuY2F0Y2goZSA9PiB7CiAgICAgICAgdGhpcy5lcnJvcnMucHVzaChlKQogICAgICB9KQogICAgfQogIH0qLwoKfTs="},{"version":3,"sources":["HeatMap.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div\n    ref=\"heatmap\"\n    :style=\"`width: 100vw; height: 100vh`\"/>\n\n</template>\n\n<script>\nimport axios from 'axios';\n\nconst bounds= {\n      north: 45.444315,\n      south: 45.362051,\n      west: 11.825627,\n      east: 11.948540,\n    };\nexport default {\n  name: 'HeatMap',\n  data() {\n    return {\n        lati: [],\n        lngo: []\n    }\n  },\n  props: {\n    lat: {\n      type: Number,\n      default: () => 37.775\n    },\n    lng: {\n      type: Number,\n      default: () => -122.434\n    },\n    initialZoom: {\n      type: Number,\n      default: () => 14\n    },\n    mapType: {\n      type: String,\n      default: () => 'roadmap'\n    },\n    points: {\n      type: Array,\n      required: true\n    },\n    width: {\n      type: [String, Number],\n      default: () => '100%'\n    },\n    height: {\n      type: [String, Number],\n      default: () => '100%'\n    },\n    opacity: {\n      type: Number,\n      default: () => 1\n    },\n    radius: {\n      type: Number,\n      default: () => 15\n    },\n    markers: [\n      {\n        position: {lat: 45.444315, lng: 11.825627}\n      },\n      {\n        position: {lat: 45.362051, lng: 11.948540}\n      }\n    ],\n    maxIntensity: {\n      type: Number,\n      default: () => 5\n    }\n  },\n  computed: {\n    mapWidth () {\n      if (typeof this.width === 'string') {\n        return this.width\n      } else {\n        return `${this.width}px`\n      }\n    },\n    mapHeight () {\n      if (typeof this.height === 'string') {\n        return this.height\n      } else {\n        return `${this.height}px`\n      }\n    },\n    heatmapPoints () {\n      return this.data.map(\n          data => new google.maps.LatLng(data.lati, data.lngo)\n      )\n    }\n  },\n  \n  mounted () {\n    axios\n      .get('http://localhost:3000/location')\n      .then(response => (this.points = response.data))\n\n    return this.$gmapApiPromiseLazy().then(() => {\n      // eslint-disable-next-line\n        this.$mapObject = new google.maps.Map(this.$refs.heatmap, {\n        zoom: this.initialZoom,\n        center: { lat: this.lat, lng: this.lng },\n        restriction: {\n          latLngBounds: bounds,\n        },\n        mapTypeId: this.mapType,\n      })\n      // eslint-disable-next-line\n        this.$heatmap = new google.maps.visualization.HeatmapLayer({\n        data: this.heatmapPoints,\n        map: this.$mapObject,\n        opacity: this.opacity,\n        radius: this.radius,\n        maxIntensity: this.maxIntensity,\n      })\n\n      this.$heatmap.setMap(this.$mapObject)\n    })\n    \n  },\n  /*methods: {\n    // Pushes posts to the server when called.\n    postPost() {\n      axios.post(`https://www.google.com/maps/search/?api=1&query=45.397959,11.87721`, {\n        body: this.postBody\n      })\n      .then(response => {})\n      .catch(e => {\n        this.errors.push(e)\n      })\n    }\n  }*/\n}\n</script>"],"sourceRoot":"src/components"}]}